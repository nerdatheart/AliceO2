digraph "o2::memory_resource::OwningMessageSpectatorAllocator&lt; T &gt;"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{o2::memory_resource\l::OwningMessageSpectatorAllocator\< T \>\n||+ OwningMessageSpectatorAllocator()\l+ OwningMessageSpectatorAllocator()\l+ OwningMessageSpectatorAllocator()\l+ OwningMessageSpectatorAllocator()\l+ OwningMessageSpectatorAllocator()\l+ operator=()\l+ select_on_container\l_copy_construction()\l+ resource()\l+ construct()\l+ destroy()\l+ allocate()\l+ deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +mResource" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{o2::memory_resource\l::MessageResource\n||+ MessageResource()\l+ MessageResource()\l+ MessageResource()\l+ operator=()\l+ operator=()\l+ MessageResource()\l+ getMessage()\l+ setMessage()\l+ getTransportFactory()\l+ getNumberOfMessages()\l# do_allocate()\l# do_deallocate()\l# do_is_equal()\l}",height=0.2,width=0.4,color="black",URL="$da/d3c/classo2_1_1memory__resource_1_1MessageResource.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{o2::memory_resource\l::FairMQMemoryResource\n||+ getMessage()\l+ setMessage()\l+ getTransportFactory()\l+ getNumberOfMessages()\l}",height=0.2,width=0.4,color="black",URL="$d6/d00/classo2_1_1memory__resource_1_1FairMQMemoryResource.html",tooltip="All FairMQ related memory resources need to inherit from this interface class for the getMessage() ap..."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{boost::container::pmr\l::memory_resource\n||}",height=0.2,width=0.4,color="grey75"];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #mMessageSize" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{size_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #mUpstream" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #mMessageData" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{void *\n||}",height=0.2,width=0.4,color="grey75"];
}
