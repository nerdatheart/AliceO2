digraph "BenchClustering"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{BenchClustering\n||+ BenchClustering()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Fixture\n||}",height=0.2,width=0.4,color="grey75"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +clusterizer" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{o2::mid::Clusterizer\n||+ Clusterizer()\l+ ~Clusterizer()\l+ Clusterizer()\l+ operator=()\l+ Clusterizer()\l+ operator=()\l+ init()\l+ process()\l+ getClusters()\l+ getNClusters()\l}",height=0.2,width=0.4,color="black",URL="$d5/dae/classo2_1_1mid_1_1Clusterizer.html",tooltip="Clusterizing algorithm for MID. "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +midMapping" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{o2::mid::Mapping\n||+ Mapping()\l+ ~Mapping()\l+ Mapping()\l+ operator=()\l+ Mapping()\l+ operator=()\l+ stripByLocation()\l+ stripByLocationInBoard()\l+ stripByPosition()\l+ getStripSize()\l+ getNStripsNBP()\l+ getFirstColumn()\l+ getFirstBoardBP()\l+ getLastBoardBP()\l+ getBoardId()\l+ getNeighbours()\l+ isValid()\l}",height=0.2,width=0.4,color="black",URL="$d1/d66/classo2_1_1mid_1_1Mapping.html"];
}
